name: Ideacamels-Deployment
on:
  push:
    branches:
      - master

env:
  REACT_APP_ENV: prod

jobs:
  check:
    outputs:
      run_client_job: ${{ steps.run_client_job.outputs.should_run }}
      run_builder_job: ${{ steps.run_builder_job.outputs.should_run }}
      run_api_job: ${{ steps.run_api_job.outputs.should_run }}
      run_infra_job: ${{ steps.run_infra_job.outputs.should_run }}
      run_keyword_optimiser_job: ${{ steps.run_keyword_optimiser_job.outputs.should_run }}
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified client files
        id: run_client_job
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file = packages/client/* ]]; then
              echo "This modified file is under the 'packages/client' folder."
              echo "::set-output name=should_run::true"
              break
            else
              echo "No changes found in the 'packages/client' folder."
              echo "::set-output name=should_run::false"
            fi
          done < files.txt

      - name: check modified builder files
        id: run_builder_job
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file = packages/builder/* ]]; then
              echo "This modified file is under the 'packages/builder' folder."
              echo "::set-output name=should_run::true"
              break
            else
              echo "No changes found in the 'packages/builder' folder."
              echo "::set-output name=should_run::false"
            fi
          done < files.txt

      - name: check modified keyword-optimiser files
        id: run_keyword_optimiser_job
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file = packages/keyword-optimiser/* ]]; then
              echo "This modified file is under the 'packages/keyword-optimiser' folder."
              echo "::set-output name=should_run::true"
              break
            else
              echo "No changes found in the 'packages/keyword-optimiser' folder."
              echo "::set-output name=should_run::false"
            fi
          done < files.txt

      - name: check modified api files
        id: run_api_job
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file = packages/api/* ]]; then
              echo "This modified file is under the 'packages/api' folder."
              echo "::set-output name=should_run::true"
              break
            else
              echo "No changes found in the 'packages/api' folder."
              echo "::set-output name=should_run::false"
            fi
          done < files.txt

      - name: check modified infra files
        id: run_infra_job
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file = packages/infrastructure/* ]]; then
              echo "This modified file is under the 'packages/infrastructure' folder."
              echo "::set-output name=should_run::true"
              break
            else
              echo "No changes found in the 'packages/infrastructure' folder."
              echo "::set-output name=should_run::false"
            fi
          done < files.txt

  Deploy-Client:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.run_client_job == 'true' && github.ref == 'refs/heads/master'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install Node Modukes
        run: cd packages/client && npm install
      - name: Build Client
        run: cd packages/client && CI=false npm run build
      - name: Deploy Client
        run: cd packages/client && make deploy-via-cicd
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_PROD_ALERTS_WEBHOOK_URL }}

  Deploy-Builder:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.run_builder_job == 'true' && github.ref == 'refs/heads/master'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Deploy Builder
        run: cd packages/builder && make deploy-via-cicd
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_PROD_ALERTS_WEBHOOK_URL }}

  Deploy-Keyword-Optimiser:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.run_keyword_optimiser_job == 'true' && github.ref == 'refs/heads/master'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Deploy Keyword Optimiser
        run: cd packages/keyword-optimiser && make deploy-via-cicd
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_PROD_ALERTS_WEBHOOK_URL }}

  Deploy-API:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.run_api_job == 'true' && github.ref == 'refs/heads/master'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Deploy API
        run: cd packages/api && make deploy-via-cicd
      - name: Post Deploy API
        run: cd packages/api && make post-deploy
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_PROD_ALERTS_WEBHOOK_URL }}

  Deploy-Infra:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.run_infra_job == 'true' && github.ref == 'refs/heads/master'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Deploy Infra
        run: cd packages/infrastructure/idea_camels && make deploy-via-cicd
      - name: Archive PEM
        uses: actions/upload-artifact@v2
        with:
          name: bastion-pem-file
          path: packages/infrastructure/idea_camels/prod_ideacamels.pem
          retention-days: 5
      - name: Post Deploy Infra
        run: cd packages/infrastructure/idea_camels && make post-deploy
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_PROD_ALERTS_WEBHOOK_URL }}
